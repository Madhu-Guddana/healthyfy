"""
This package provides methods to convert IP in
decimal format to hexadecimal format.

Author: madhu.guddana@gmail.com
"""

# Value for unit testcases
test_cases = [
    ['229.187.208.36', '0xE5BBD024'],
    ['167.207.134.192', '0xA7CF86C0'],
    ['27.39.79.234', '0x1B274FEA'],
    ['218.179.201.176', '0xDAB3C9B0'],
    ['48.76.162.248', '0x304CA2F8'],
    ['16.71.21.78', '0x1047154E'],
    ['133.123.120.182', '0x857B78B6'],
    ['169.230.148.154', '0xA9E6949A'],
    ['254.139.101.145', '0xFE8B6591'],
    ['55.36.105.244', '0x372469F4'],
    ['167.58.181.218', '0xA73AB5DA'],
    ['227.43.218.14', '0xE32BDAE'],
    ['65.240.231.63', '0x41F0E73F'],
    ['224.99.31.132', '0xE0631F84'],
    ['109.41.182.123', '0x6D29B67B'],
    ['237.1.93.173', '0xED15DAD'],
    ['6.12.104.186', '0x6C68BA'],
    ['211.2.195.142', '0xD32C38E'],
    ['219.181.57.6', '0xDBB5396'],
    ['12.131.71.97', '0xC834761'],
    ['207.186.100.88', '0xCFBA6458'],
    ['58.243.102.203', '0x3AF366CB'],
    ['246.130.150.110', '0xF682966E'],
    ['94.172.235.168', '0x5EACEBA8'],
    ['9.87.65.223', '0x95741DF'],
    ['153.157.212.103', '0x999DD467'],
    ['8.127.206.139', '0x87FCE8B'],
    ['252.46.1.105', '0xFC2E169'],
    ['251.144.234.80', '0xFB90EA50'],
    ['165.147.26.251', '0xA5931AFB'],
    ['79.144.42.234', '0x4F902AEA'],
    ['203.137.190.147', '0xCB89BE93'],
    ['223.60.152.116', '0xDF3C9874'],
    ['91.107.15.114', '0x5B6BF72'],
    ['161.154.90.51', '0xA19A5A33'],
    ['119.238.186.102', '0x77EEBA66'],
    ['160.129.96.100', '0xA0816064'],
    ['77.8.43.38', '0x4D82B26'],
    ['55.181.184.156', '0x37B5B89C'],
    ['123.128.193.224', '0x7B80C1E0'],
    ['98.141.219.107', '0x628DDB6B'],
    ['121.142.177.236', '0x798EB1EC'],
    ['10.157.185.227', '0xA9DB9E3'],
    ['165.50.246.116', '0xA532F674'],
    ['28.60.98.148', '0x1C3C6294'],
    ['212.169.138.211', '0xD4A98AD3'],
    ['136.155.114.159', '0x889B729F'],
    ['55.128.243.182', '0x3780F3B6'],
    ['241.201.42.202', '0xF1C92ACA'],
    ['162.226.118.239', '0xA2E276EF'],
    ['117.123.184.106', '0x757BB86A'],
    ['194.211.179.120', '0xC2D3B378'],
    ['27.232.130.172', '0x1BE882AC'],
    ['24.224.141.228', '0x18E08DE4'],
    ['13.44.145.27', '0xD2C911B'],
    ['56.31.52.161', '0x381F34A1'],
    ['40.156.155.88', '0x289C9B58'],
    ['90.207.108.97', '0x5ACF6C61'],
    ['93.166.137.40', '0x5DA68928'],
    ['161.200.123.23', '0xA1C87B17'],
    ['205.107.197.199', '0xCD6BC5C7'],
    ['73.218.8.48', '0x49DA830'],
    ['72.172.79.197', '0x48AC4FC5'],
    ['240.38.59.12', '0xF0263BC'],
    ['93.60.127.65', '0x5D3C7F41'],
    ['245.250.229.244', '0xF5FAE5F4'],
    ['199.76.113.149', '0xC74C7195'],
    ['6.221.114.217', '0x6DD72D9'],
    ['64.228.61.122', '0x40E43D7A'],
    ['224.155.149.216', '0xE09B95D8'],
    ['123.168.182.232', '0x7BA8B6E8'],
    ['3.120.143.29', '0x3788F1D'],
    ['37.152.92.178', '0x25985CB2'],
    ['187.227.233.172', '0xBBE3E9AC'],
    ['173.90.96.45', '0xAD5A602D'],
    ['157.34.167.135', '0x9D22A787'],
    ['50.48.91.179', '0x32305BB3'],
    ['210.233.247.255', '0xD2E9F7FF'],
    ['80.62.32.248', '0x503E20F8'],
    ['202.7.175.35', '0xCA7AF23'],
    ['214.101.104.15', '0xD66568F'],
    ['202.141.184.140', '0xCA8DB88C'],
    ['119.203.88.70', '0x77CB5846'],
    ['80.187.132.21', '0x50BB8415'],
    ['68.142.46.211', '0x448E2ED3'],
    ['56.142.4.66', '0x388E442'],
    ['248.185.15.139', '0xF8B9F8B'],
    ['66.162.0.125', '0x42A207D'],
    ['232.48.166.40', '0xE830A628'],
    ['37.62.97.234', '0x253E61EA'],
    ['202.69.208.68', '0xCA45D044'],
    ['164.117.110.205', '0xA4756ECD'],
    ['140.61.248.206', '0x8C3DF8CE'],
    ['255.146.166.197', '0xFF92A6C5'],
    ['154.225.42.21', '0x9AE12A15'],
    ['210.196.173.218', '0xD2C4ADDA'],
    ['193.94.130.186', '0xC15E82BA'],
    ['87.178.97.84', '0x57B26154'],
    ['193.7.240.157', '0xC17F09D'],
    ['36.156.56.64', '0x249C3840']
]

def to_hex_ip(dec_ip):
    """Convert a decimal ip to hex ip.

    Args:
        dec_ip (str): Valid decimal IP address.

    Returns:
         str: hex ip address equivalent to given dec_ip address.
    """
    a = dec_ip.split('.')
    b = '0x' + dec_to_hex(int(a[0])) + dec_to_hex(int(a[1])) + \
        dec_to_hex(int(a[2])) + dec_to_hex(int(a[3]))
    return b

def dec_to_hex(num):
  """Method to convert decimal number to Hexadecimal number.

  Args:
    (num, integer): integer in the range 0 to 255.

  Returns:
    str: String representing hexadecimal value of integer.
  """

  # A Corner condition where dicimal number is 0.
  if num == 0:
    return '0'

  # Dictionary that maps number above 9 of
  # hexadecimal value to associated alphabets
  dicti = {10:'A',
           11:'B',
           12:'C',
           13:'D',
           14:'E',
           15:'F'}
  rem = []
  while(num!=0):
    r = num%16
    rem.insert(0,str(r) if r<10 else dicti[r])
    num = num/16
  return "".join(rem)

def run():
  """The entry point to run unit test on various API provided.

  Args:
    None

  Returns:
    None
  """
  passing = 0
  for dec_ip, hex_ip in test_cases:
      if to_hex_ip(dec_ip) == hex_ip:
          passing += 1
  print('{} out of {} test case are passing.'.format(passing, len(test_cases)))

run()
